{"version":3,"sources":["throb.js"],"names":["define","langx","styler","noder","transits","transit","throb","elm","params","timer","time","callback","throbber","createElement","class","className","remove","clearTimeout","content","style","css","html","appendChild","setTimeout","update","text","textNode","nodeValue"],"mappings":";;;;;;;AAAAA,OAAO,CACH,sBACA,sBACA,qBACA,aACA,aACF,SAASC,EAAMC,EAAOC,EAAMC,EAASC,GAyEnC,OAAOD,EAASE,MAjEhB,SAAeC,EAAKC,GAChBA,EAASA,GAAU,GAEnB,IAKIC,EAFAC,EAAOF,EAAOE,KACdC,EAAWH,EAAOG,SAGlBC,EAAWT,EAAMU,cAAc,MAAO,CAClCC,MAASN,EAAOO,WAAa,UACjC,CAAC,EAIDC,EAAS,WACDP,IACAQ,aAAaR,CAAK,EAClBA,EAAQ,MAERG,IACAT,EAAMa,OAAOJ,CAAQ,EACrBA,EAAW,KAEnB,EAgBAM,GATAV,EAAOW,OACPjB,EAAOkB,IAAIR,EAASJ,EAAOW,KAAK,EAQtBX,EAAOU,SAAY,+BAiBjC,OAZAf,EAAMkB,KAAKT,EAASM,CAAO,EAE3BX,EAAIe,YAAYV,CAAQ,EAMpBF,IACAD,EAAQc,WALF,WACNP,EAAO,EACHL,GAAUA,EAAS,CAC3B,EAE4BD,CAAI,GAGzB,CACHE,SAAWA,EACXI,OAAQA,EACRQ,OAnCS,SAAShB,GACVA,GAAUA,EAAOiB,MAAQb,IACzBc,SAASC,UAAYnB,EAAOiB,KAEpC,CAgCJ,CACJ,CAGJ,CAAC","file":"../throb.js","sourcesContent":["define([\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-noder\",\r\n    \"./transits\",\r\n    \"./transit\"\r\n],function(langx,styler,noder,transits,transit) {\r\n\r\n    \r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = noder.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            //_overlay = overlay(throbber, {\r\n            //    \"class\": 'overlay fade'\r\n            //}),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    noder.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n\r\n        //throb = noder.createElement(\"div\", {\r\n        //   \"class\": params.throb && params.throb.className || \"throb\"\r\n        //}),\r\n        //textNode = noder.createTextNode(text || \"\"),\r\n \r\n        var content = params.content ||  '<span class=\"throb\"></span>';\r\n\r\n        //throb.appendChild(textNode);\r\n        //throbber.appendChild(throb);\r\n\r\n        noder.html(throbber,content);\r\n        \r\n        elm.appendChild(throbber);\r\n\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            throbber : throbber,\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n    return transits.throb = throb;\r\n});"]}